# github.com/g4s8/gophercon-sg-2023/interfaces
./impls.go:25:6: can inline inter64.Int64
./impls.go:29:6: can inline inter32.Int64
./impls.go:33:6: can inline interStr.Int64
./impls.go:38:6: can inline (*interPtr).Int64
./impls.go:42:6: can inline interStruct.Int64
./impls.go:46:6: can inline (*interPtrStruct).Int64
./impls.go:50:6: can inline interStructPtr.Int64
./impls.go:54:6: can inline (*interPtrStructPtr).Int64
./main.go:63:6: can inline toInt
./main.go:67:6: can inline toInt32
./main.go:68:16: inlining call to inter32.Int64
./main.go:83:6: can inline toIntGeneric[go.shape.int32]
./main.go:71:6: can inline toInt64
./main.go:72:16: inlining call to inter64.Int64
./main.go:83:6: can inline toIntGeneric[go.shape.int64]
./main.go:75:6: can inline toIntStr
./main.go:76:16: inlining call to interStr.Int64
./main.go:83:6: can inline toIntGeneric[go.shape.string]
./main.go:79:6: can inline toIntPtr
./main.go:80:16: inlining call to (*interPtr).Int64
./main.go:83:6: can inline toIntGeneric[go.shape.*uint8]
./main.go:87:6: can inline toIntStruct
./main.go:88:16: inlining call to interStruct.Int64
./main.go:83:6: can inline toIntGeneric[go.shape.struct { main.val int64 }]
./main.go:91:6: can inline toIntPtrStruct
./main.go:92:16: inlining call to (*interPtrStruct).Int64
./main.go:95:6: can inline toIntStructPtr
./main.go:96:16: inlining call to interStructPtr.Int64
./main.go:83:6: can inline toIntGeneric[go.shape.struct { main.val *int64 }]
./main.go:99:6: can inline toIntPtrStructPtr
./main.go:100:16: inlining call to (*interPtrStructPtr).Int64
./main.go:9:11: inlining call to toInt
./main.go:10:13: inlining call to toInt32
./main.go:11:18: inlining call to toIntGeneric[go.shape.int32]
./main.go:14:11: inlining call to toInt
./main.go:15:13: inlining call to toInt32
./main.go:16:18: inlining call to toIntGeneric[go.shape.int32]
./main.go:19:11: inlining call to toInt
./main.go:20:13: inlining call to toInt64
./main.go:21:18: inlining call to toIntGeneric[go.shape.int64]
./main.go:24:11: inlining call to toInt
./main.go:25:13: inlining call to toInt64
./main.go:26:18: inlining call to toIntGeneric[go.shape.int64]
./main.go:29:11: inlining call to toInt
./main.go:30:14: inlining call to toIntStr
./main.go:31:18: inlining call to toIntGeneric[go.shape.string]
./main.go:34:11: inlining call to toInt
./main.go:35:14: inlining call to toIntPtr
./main.go:36:18: inlining call to toIntGeneric[go.shape.*uint8]
./main.go:39:11: inlining call to toInt
./main.go:40:17: inlining call to toIntStruct
./main.go:41:18: inlining call to toIntGeneric[go.shape.struct { main.val int64 }]
./main.go:44:11: inlining call to toInt
./main.go:45:20: inlining call to toIntPtrStruct
./main.go:46:18: inlining call to toIntGeneric[go.shape.*uint8]
./main.go:51:11: inlining call to toInt
./main.go:52:20: inlining call to toIntStructPtr
./main.go:53:18: inlining call to toIntGeneric[go.shape.struct { main.val *int64 }]
./main.go:58:11: inlining call to toInt
./main.go:59:23: inlining call to toIntPtrStructPtr
./main.go:60:18: inlining call to toIntGeneric[go.shape.*uint8]
./main.go:10:13: inlining call to inter32.Int64
./main.go:15:13: inlining call to inter32.Int64
./main.go:20:13: inlining call to inter64.Int64
./main.go:25:13: inlining call to inter64.Int64
./main.go:30:14: inlining call to interStr.Int64
./main.go:35:14: inlining call to (*interPtr).Int64
./main.go:40:17: inlining call to interStruct.Int64
./main.go:45:20: inlining call to (*interPtrStruct).Int64
./main.go:52:20: inlining call to interStructPtr.Int64
./main.go:59:23: inlining call to (*interPtrStructPtr).Int64
./main.go:83:6: can inline toIntGeneric[*main.interPtrStructPtr]
./main.go:83:6: inlining call to toIntGeneric[go.shape.*uint8]
./main.go:83:6: can inline toIntGeneric[main.interStructPtr]
./main.go:83:6: inlining call to toIntGeneric[go.shape.struct { main.val *int64 }]
./main.go:83:6: can inline toIntGeneric[*main.interPtrStruct]
./main.go:83:6: inlining call to toIntGeneric[go.shape.*uint8]
./main.go:83:6: can inline toIntGeneric[main.interStruct]
./main.go:83:6: inlining call to toIntGeneric[go.shape.struct { main.val int64 }]
./main.go:83:6: can inline toIntGeneric[*main.interPtr]
./main.go:83:6: inlining call to toIntGeneric[go.shape.*uint8]
./main.go:83:6: can inline toIntGeneric[main.interStr]
./main.go:83:6: inlining call to toIntGeneric[go.shape.string]
./main.go:83:6: can inline toIntGeneric[main.inter64]
./main.go:83:6: inlining call to toIntGeneric[go.shape.int64]
./main.go:83:6: can inline toIntGeneric[main.inter32]
./main.go:83:6: inlining call to toIntGeneric[go.shape.int32]
<autogenerated>:1: inlining call to inter64.Int64
<autogenerated>:1: inlining call to inter32.Int64
<autogenerated>:1: inlining call to interStr.Int64
<autogenerated>:1: inlining call to interStruct.Int64
<autogenerated>:1: inlining call to interStructPtr.Int64
./main.go:9:11: devirtualizing i.Int64 to inter32
./main.go:14:11: devirtualizing i.Int64 to inter32
./main.go:19:11: devirtualizing i.Int64 to inter64
./main.go:24:11: devirtualizing i.Int64 to inter64
./main.go:29:11: devirtualizing i.Int64 to interStr
./main.go:34:11: devirtualizing i.Int64 to *interPtr
./main.go:39:11: devirtualizing i.Int64 to interStruct
./main.go:44:11: devirtualizing i.Int64 to *interPtrStruct
./main.go:51:11: devirtualizing i.Int64 to interStructPtr
./main.go:58:11: devirtualizing i.Int64 to *interPtrStructPtr
./impls.go:33:7: i does not escape
./impls.go:38:7: i does not escape
./impls.go:46:7: i does not escape
./impls.go:50:7: i does not escape
./impls.go:54:7: i does not escape
./main.go:33:2: moved to heap: iPtr
./main.go:43:2: moved to heap: iPtrStruct
./main.go:55:2: moved to heap: iPtrStructPtr
./main.go:9:12: i32_1 does not escape
./main.go:14:12: i32_256 does not escape
./main.go:19:12: i64_1 does not escape
./main.go:24:12: i64_256 does not escape
./main.go:29:12: iStr does not escape
./main.go:39:12: iStruct does not escape
./main.go:49:22: new(int64) escapes to heap
./main.go:56:25: new(int64) escapes to heap
./main.go:63:12: leaking param: i
./main.go:75:15: i does not escape
./main.go:79:15: i does not escape
./main.go:91:21: i does not escape
./main.go:95:21: i does not escape
./main.go:99:24: i does not escape
